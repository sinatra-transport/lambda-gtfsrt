name: "Build"

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "sinatra"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "lambda-gtfsrs"
  CONFIG_DIRECTORY: "./terraform"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: arduino/setup-protoc@v3
      - name: Install Rust toolchain with Cargo Lambda
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-lambda
      - name: Install Zig toolchain
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0
      - run: |
          cargo lambda build --release --arm64 --output-format zip --manifest-path lambda/Cargo.toml
      - uses: actions/upload-artifact@v4
        with:
          name: lambda-gtfsrt
          path: ./lambda/target/lambda/lambda/bootstrap.zip
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: lambda-gtfsrt
          path: ./terraform
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
          