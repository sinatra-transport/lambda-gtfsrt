name: "Build"

on:
  push:
    branches:
      - main

# env:
#   TF_CLOUD_ORGANIZATION: "sinatra"
#   TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
#   TF_WORKSPACE: "lambda-gtfsrt"
#   CONFIG_DIRECTORY: "./terraform"


jobs:
  build:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: |
          npm install --no-bin-links
          npm build
          cp -r node_modules dist/node_modules
          zip -r lambda-gtfsrt.zip dist
      - uses: actions/upload-artifact@v4
        with:
          name: lambda-gtfsrt
          path: ./lambda-gtfsrt.zip

  # terraform:
  #   name: "Terraform Apply"
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Upload Configuration
  #       uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
  #       id: apply-upload
  #       with:
  #         workspace: ${{ env.TF_WORKSPACE }}
  #         directory: ${{ env.CONFIG_DIRECTORY }}

  #     - name: Create Apply Run
  #       uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
  #       id: apply-run
  #       with:
  #         workspace: ${{ env.TF_WORKSPACE }}
  #         configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

  #     - name: Apply
  #       uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
  #       if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
  #       id: apply
  #       with:
  #         run: ${{ steps.apply-run.outputs.run_id }}
  #         comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"